name: Cypress Tests with Report and Notification on TEAMS

on:
  schedule:
    - cron: "0 */6 * * *" # Every 6 hours
  workflow_dispatch:

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Install Cypress and reporter
        run: npm install cypress cypress-mochawesome-reporter

      - name: Run Cypress tests and capture results
        id: cypress
        continue-on-error: true
        env:
          CYPRESS_EMAIL: ${{ secrets.CYPRESS_EMAIL }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
          CYPRESS_MOCHAWESOME_REPORT_DIR: cypress/reports
        run: |
          # Run Cypress and capture output, stripping ANSI escape sequences
          npx cypress run --env email=$CYPRESS_EMAIL,password=$CYPRESS_PASSWORD \
            --reporter spec \
            | sed 's/\x1b\[[0-9;]*m//g' \
            | tee cypress_output.txt

          # Parse the summary line at the end of the output
          SUMMARY_LINE=$(grep -A1 "‚îî‚îÄ*" cypress_output.txt | tail -n 1)
          echo "Summary line: $SUMMARY_LINE"

          # Validate summary line format
          if [[ -z "$SUMMARY_LINE" ]]; then
            echo "Error: Unable to parse Cypress summary line."
            exit 1
          fi

          # Extract numbers using awk
          TOTAL=$(echo "$SUMMARY_LINE" | awk '{print $(NF-4)}')
          PASSED=$(echo "$SUMMARY_LINE" | awk '{print $(NF-3)}')
          FAILED=$(echo "$SUMMARY_LINE" | awk '{print $(NF-2)}')
          PENDING=$(echo "$SUMMARY_LINE" | awk '{print $(NF-1)}')
          SKIPPED=$(echo "$SUMMARY_LINE" | awk '{print $NF}')

          # Calculate success rate
          if [[ $TOTAL -eq 0 ]]; then
            SUCCESS_RATE=0
          else
            SUCCESS_RATE=$(awk "BEGIN {printf \"%.2f\", ($PASSED/$TOTAL) * 100}")
          fi

          # Debug output
          echo "Parsed Results:"
          echo "Total: $TOTAL"
          echo "Passed: $PASSED"
          echo "Failed: $FAILED"
          echo "Pending: $PENDING"
          echo "Skipped: $SKIPPED"
          echo "Success Rate: $SUCCESS_RATE%"

          # Set outputs
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT
          echo "skipped=$SKIPPED" >> $GITHUB_OUTPUT
          echo "success_rate=$SUCCESS_RATE" >> $GITHUB_OUTPUT

      - name: Debug - Check Reports Directory
        run: ls -R cypress/reports || echo "No reports generated"

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-report
          path: cypress/reports/
          if-no-files-found: warn

      - name: Send notification to Microsoft Teams
        if: always()
        run: |
          # Determine status and color based on results
          FAILED_COUNT="${{ steps.cypress.outputs.failed }}"
          if [[ "$FAILED_COUNT" -eq 0 ]]; then
            STATUS="‚úÖ IR Daily Health Check tests completed successfully"
            COLOR="good"
          else
            STATUS="‚ùå IR Daily Health Check tests failed"
            COLOR="attention"
          fi

          JSON_PAYLOAD=$(cat << EOF
          {
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "type": "AdaptiveCard",
                  "body": [
                    {
                      "type": "TextBlock",
                      "text": "$STATUS",
                      "weight": "bolder",
                      "size": "large",
                      "color": "$COLOR"
                    },
                    {
                      "type": "FactSet",
                      "facts": [
                        {
                          "title": "Total Tests",
                          "value": "${{ steps.cypress.outputs.total }}"
                        },
                        {
                          "title": "‚úÖ Passed",
                          "value": "${{ steps.cypress.outputs.passed }}"
                        },
                        {
                          "title": "‚ùå Failed",
                          "value": "${{ steps.cypress.outputs.failed }}"
                        },
                        {
                          "title": "‚è≠Ô∏è Skipped",
                          "value": "${{ steps.cypress.outputs.skipped }}"
                        },
                        {
                          "title": "üìà Success Rate",
                          "value": "${{ steps.cypress.outputs.success_rate }}%"
                        }
                      ]
                    },
                    {
                      "type": "TextBlock",
                      "text": "[View Detailed Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})",
                      "wrap": true
                    }
                  ],
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "version": "1.0"
                }
              }
            ]
          }
          EOF
          )

          # Send notification to Teams
          if ! curl -H "Content-Type: application/json" -d "$JSON_PAYLOAD" "$TEAMS_WEBHOOK_URL"; then
            echo "Failed to send notification to Microsoft Teams."
            exit 1
          fi
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
