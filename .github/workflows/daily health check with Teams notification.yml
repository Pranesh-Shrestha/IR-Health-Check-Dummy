name: Cypress Tests with Report and Notification on TEAMS

on:
  schedule:
    - cron: "0 */6 * * *"  # Every 6 hours
  workflow_dispatch:

jobs:
  cypress-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Install Cypress and reporter
        run: npm install cypress cypress-mochawesome-reporter

      - name: Run Cypress tests with Mochawesome
        env:
          CYPRESS_EMAIL: ${{ secrets.CYPRESS_EMAIL }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
        run: |
          npx cypress run --env email=$CYPRESS_EMAIL,password=$CYPRESS_PASSWORD --reporter mochawesome --reporter-options "reportDir=cypress/reports,overwrite=false,html=true,json=true" | tee cypress-output.log

      - name: Extract test count from Cypress output
        id: extract_test_count
        run: |
          # Extract the test count from the Cypress output
          TEST_COUNT=$(grep -oP '(?<=Tests:        )\d+' cypress-output.log || echo "0")
          PASS_COUNT=$(grep -oP '(?<=Passing:      )\d+' cypress-output.log || echo "0")
          FAIL_COUNT=$(grep -oP '(?<=Failing:      )\d+' cypress-output.log || echo "0")
          PENDING_COUNT=$(grep -oP '(?<=Pending:      )\d+' cypress-output.log || echo "0")

          # Output the counts for use in subsequent steps
          echo "TEST_COUNT=$TEST_COUNT" >> $GITHUB_ENV
          echo "PASS_COUNT=$PASS_COUNT" >> $GITHUB_ENV
          echo "FAIL_COUNT=$FAIL_COUNT" >> $GITHUB_ENV
          echo "PENDING_COUNT=$PENDING_COUNT" >> $GITHUB_ENV

      - name: Debug - Check Extracted Test Counts
        run: |
          echo "Total Tests: $TEST_COUNT"
          echo "Passing Tests: $PASS_COUNT"
          echo "Failing Tests: $FAIL_COUNT"
          echo "Pending Tests: $PENDING_COUNT"

      - name: Generate merged report
        if: always()
        run: |
          if ls cypress/reports/*.json 1>/dev/null 2>&1; then
            npx mochawesome-merge cypress/reports/*.json > cypress/reports/full_report.json
            npx marge cypress/reports/full_report.json -f report -o cypress/reports
          else
            echo "No JSON reports found. Skipping merge."
          fi

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-reports
          path: |
            cypress/reports
            cypress/screenshots
            cypress/videos
          retention-days: 30
          if-no-files-found: warn

      - name: Process and send results to Teams
        if: always()
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          # Calculate success rate
          if [ "$TEST_COUNT" -eq 0 ]; then
            SUCCESS_RATE="0.00"
          else
            SUCCESS_RATE=$(echo "scale=2; ($PASS_COUNT * 100)/$TEST_COUNT" | bc)
          fi

          # Determine status color
          if [ "$FAIL_COUNT" -eq 0 ]; then
            COLOR="good"
            STATUS="✅ Success"
          else
            COLOR="attention"
            STATUS="❌ Failed"
          fi

          # Create Teams message card
          curl -H "Content-Type: application/json" -X POST -d '{
            "type": "message",
            "attachments": [{
              "contentType": "application/vnd.microsoft.card.adaptive",
              "content": {
                "type": "AdaptiveCard",
                "body": [{
                  "type": "TextBlock",
                  "size": "Large",
                  "weight": "Bolder",
                  "text": "Cypress Test Results",
                  "color": "'"$COLOR"'"
                },
                {
                  "type": "TextBlock",
                  "text": "'"$STATUS"'",
                  "weight": "Bolder",
                  "color": "'"$COLOR"'"
                },
                {
                  "type": "FactSet",
                  "facts": [
                    { "title": "Total Tests", "value": "'"$TEST_COUNT"'" },
                    { "title": "Passed", "value": "'"$PASS_COUNT"'" },
                    { "title": "Failed", "value": "'"$FAIL_COUNT"'" },
                    { "title": "Pending", "value": "'"$PENDING_COUNT"'" },
                    { "title": "Success Rate", "value": "'"$SUCCESS_RATE"'%" }
                  ]
                }],
                "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                "version": "1.2"
              }
            }]
          }' $TEAMS_WEBHOOK_URL
